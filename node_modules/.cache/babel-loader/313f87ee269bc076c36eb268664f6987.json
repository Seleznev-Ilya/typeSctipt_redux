{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dell304/Selieznov/todo React/react_typescript/src/pages/main/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TodoForm from \"../../components/TodoForm\";\nimport { TodoList } from \"../../components/TodoList\";\nimport { TodoInteraction } from \"../../components/TodoInteraction\";\nimport \"./style.scss\";\n\nconst MainPage = () => {\n  _s();\n\n  const [todo, setTodo] = useState([]);\n  const [currentState, setCuttrentState] = useState(\"all\");\n\n  const AddHabdler = title => {\n    const task = {\n      title,\n      id: new Date().getTime(),\n      completed: false\n    };\n    setTodo(prev => {\n      return [...prev, task];\n    });\n  };\n\n  const CheckHandler = id => {\n    setTodo(prev => prev.map(todoItem => {\n      if (todoItem.id === id) {\n        todoItem.completed = !todoItem.completed;\n      }\n\n      return todoItem;\n    }));\n  };\n\n  const DeleteHandler = id => {\n    setTodo(prev => prev.filter(todoItem => todoItem.id !== id));\n  };\n\n  const EditHandler = (id, title) => {\n    setTodo(prev => prev.map(todoItem => {\n      if (todoItem.id === id) {\n        todoItem.title = title;\n      }\n\n      return todoItem;\n    }));\n\n    if (title.trim() === \"\") {\n      DeleteHandler(id);\n    }\n  };\n\n  const CleanCompletedHandler = () => {\n    setTodo(prev => prev.filter(todoItem => todoItem.completed === false));\n  };\n\n  const FilterStateHandler = title => {\n    setCuttrentState(title);\n  };\n\n  useEffect(() => {\n    setTodo(todo);\n  }, [todo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: AddHabdler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todo: todo,\n      onCheck: CheckHandler,\n      onDelete: DeleteHandler,\n      onEdidt: EditHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), todo.length !== 0 ? /*#__PURE__*/_jsxDEV(TodoInteraction, {\n      arrItems: todo,\n      clear: CleanCompletedHandler,\n      state: currentState,\n      setFilter: FilterStateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainPage, \"mO1WJw7uV7IvxNPxnYOK9eI77dE=\");\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/home/dell304/Selieznov/todo React/react_typescript/src/pages/main/index.tsx"],"names":["React","useEffect","useState","TodoForm","TodoList","TodoInteraction","MainPage","todo","setTodo","currentState","setCuttrentState","AddHabdler","title","task","id","Date","getTime","completed","prev","CheckHandler","map","todoItem","DeleteHandler","filter","EditHandler","trim","CleanCompletedHandler","FilterStateHandler","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TodoForm from \"../../components/TodoForm\";\nimport { TodoList } from \"../../components/TodoList\";\nimport { TodoInteraction } from \"../../components/TodoInteraction\";\nimport \"./style.scss\";\nimport { Task } from \"../../types/index\";\n\nconst MainPage = () => {\n  const [todo, setTodo] = useState<Task[]>([]);\n  const [currentState, setCuttrentState] = useState<string>(\"all\");\n\n  const AddHabdler = (title: string) => {\n    const task: Task = {\n      title,\n      id: new Date().getTime(),\n      completed: false,\n    };\n\n    setTodo((prev: Task[]) => {\n      return [...prev, task];\n    });\n  };\n\n  const CheckHandler = (id: number) => {\n    setTodo((prev) =>\n      prev.map((todoItem) => {\n        if (todoItem.id === id) {\n          todoItem.completed = !todoItem.completed;\n        }\n        return todoItem;\n      })\n    );\n  };\n\n  const DeleteHandler = (id: number) => {\n    setTodo((prev) => prev.filter((todoItem) => todoItem.id !== id));\n  };\n\n  const EditHandler = (id: number, title: string) => {\n    setTodo((prev) =>\n      prev.map((todoItem) => {\n        if (todoItem.id === id) {\n          todoItem.title = title;\n        }\n        return todoItem;\n      })\n    );\n    if (title.trim() === \"\") {\n      DeleteHandler(id);\n    }\n  };\n\n  const CleanCompletedHandler = () => {\n    setTodo((prev) => prev.filter((todoItem) => todoItem.completed === false));\n  };\n\n  const FilterStateHandler = (title: string) => {\n    setCuttrentState(title);\n  };\n\n  useEffect(() => {\n    setTodo(todo);\n  }, [todo]);\n\n  return (\n    <div className=\"container\">\n      <h1>Todo List</h1>\n      <TodoForm onSubmit={AddHabdler} />\n      <TodoList\n        todo={todo}\n        onCheck={CheckHandler}\n        onDelete={DeleteHandler}\n        onEdidt={EditHandler}\n      />\n      {todo.length !== 0 ? (\n        <TodoInteraction\n          arrItems={todo}\n          clear={CleanCompletedHandler}\n          state={currentState}\n          setFilter={FilterStateHandler}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default MainPage;\n"]},"metadata":{},"sourceType":"module"}