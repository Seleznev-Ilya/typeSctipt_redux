{"ast":null,"code":"import { ADD_NEWONE_TASK } from \"../constants\";\nimport { TOGGLE_ITEM_TASK } from \"../constants\";\n\nconst todoList = (state = [], actions) => {\n  switch (actions.type) {\n    case ADD_NEWONE_TASK:\n      return [...state, {\n        id: actions.id,\n        payload: actions.payload,\n        completed: actions.completed\n      }];\n\n    case TOGGLE_ITEM_TASK:\n      return state.map(todo => todo.id === actions.id ? { ...todo,\n        completed: !todo.completed\n      } : todo);\n    // case DELETE_:\n    //   return [\n    //     ...state,\n    //     {\n    //       id: actions.id,\n    //       payload: actions.payload,\n    //       completed: actions.completed,\n    //     },\n    //   ];\n\n    default:\n      return state;\n  }\n};\n\nexport default todoList;","map":{"version":3,"sources":["/home/dell304/Selieznov/todo React/react_typescript/src/reducers/todo.ts"],"names":["ADD_NEWONE_TASK","TOGGLE_ITEM_TASK","todoList","state","actions","type","id","payload","completed","map","todo"],"mappings":"AAAA,SAASA,eAAT,QAAgC,cAAhC;AACA,SAASC,gBAAT,QAAiC,cAAjC;;AAEA,MAAMC,QAAQ,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,OAAb,KAA8B;AAC7C,UAAQA,OAAO,CAACC,IAAhB;AACE,SAAKL,eAAL;AACE,aAAO,CACL,GAAGG,KADE,EAEL;AACEG,QAAAA,EAAE,EAAEF,OAAO,CAACE,EADd;AAEEC,QAAAA,OAAO,EAAEH,OAAO,CAACG,OAFnB;AAGEC,QAAAA,SAAS,EAAEJ,OAAO,CAACI;AAHrB,OAFK,CAAP;;AASF,SAAKP,gBAAL;AACE,aAAOE,KAAK,CAACM,GAAN,CAAWC,IAAD,IACfA,IAAI,CAACJ,EAAL,KAAYF,OAAO,CAACE,EAApB,GAAyB,EAAE,GAAGI,IAAL;AAAWF,QAAAA,SAAS,EAAE,CAACE,IAAI,CAACF;AAA5B,OAAzB,GAAmEE,IAD9D,CAAP;AAIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACE,aAAOP,KAAP;AA1BJ;AA4BD,CA7BD;;AA+BA,eAAeD,QAAf","sourcesContent":["import { ADD_NEWONE_TASK } from \"../constants\";\nimport { TOGGLE_ITEM_TASK } from \"../constants\";\n\nconst todoList = (state = [], actions: any) => {\n  switch (actions.type) {\n    case ADD_NEWONE_TASK:\n      return [\n        ...state,\n        {\n          id: actions.id,\n          payload: actions.payload,\n          completed: actions.completed,\n        },\n      ];\n\n    case TOGGLE_ITEM_TASK:\n      return state.map((todo: any) =>\n        todo.id === actions.id ? { ...todo, completed: !todo.completed } : todo\n      );\n\n    // case DELETE_:\n    //   return [\n    //     ...state,\n    //     {\n    //       id: actions.id,\n    //       payload: actions.payload,\n    //       completed: actions.completed,\n    //     },\n    //   ];\n    default:\n      return state;\n  }\n};\n\nexport default todoList;\n"]},"metadata":{},"sourceType":"module"}