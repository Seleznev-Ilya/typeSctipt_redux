{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dell304/Selieznov/todo React/react_typescript/src/components/NumberItems/index.tsx\";\nimport React, { memo } from \"react\";\n\n// const Numbers = ({ arrItems }: ArrayItems) => {\n//   return (\n//     <p className=\"numberItems\">\n//       <b>{arrItems.filter((item) => item.completed === false).length} </b> items\n//       left\n//     </p>\n//   );\n// };\nconst NumberItems = ({\n  arrItems\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"numberItems\",\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: [arrItems.filter(item => item.completed === false).length, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), \" items left\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = NumberItems;\nexport default _c2 = /*#__PURE__*/memo(NumberItems);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NumberItems\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/dell304/Selieznov/todo React/react_typescript/src/components/NumberItems/index.tsx"],"names":["React","memo","NumberItems","arrItems","filter","item","completed","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA8B;AAChD,sBACE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA,4BACE;AAAA,iBAAIA,QAAQ,CAACC,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACC,SAAL,KAAmB,KAA7C,EAAoDC,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAPD;;KAAML,W;AASN,kCAAeD,IAAI,CAACC,WAAD,CAAnB","sourcesContent":["import React, { memo } from \"react\";\n\nimport { Task } from \"../../types/index\";\n\ninterface ArrayItems {\n  arrItems: Task[];\n}\n\n// const Numbers = ({ arrItems }: ArrayItems) => {\n//   return (\n//     <p className=\"numberItems\">\n//       <b>{arrItems.filter((item) => item.completed === false).length} </b> items\n//       left\n//     </p>\n//   );\n// };\n\nconst NumberItems = ({ arrItems }: ArrayItems) => {\n  return (\n    <p className=\"numberItems\">\n      <b>{arrItems.filter((item) => item.completed === false).length} </b> items\n      left\n    </p>\n  );\n};\n\nexport default memo(NumberItems);\n"]},"metadata":{},"sourceType":"module"}