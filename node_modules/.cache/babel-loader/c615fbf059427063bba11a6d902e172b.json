{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dell304/Selieznov/todo React/react_typescript/src/componenst/InputMain/index.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addTodo } from \"../../actions\";\n\nconst InputMain = ({\n  dispatch\n}) => {\n  let input;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n\n      if (!input.value.trim()) {\n        return;\n      }\n\n      dispatch(addTodo(input.value));\n      input.value = \"\";\n    },\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Add your task here\",\n      ref: node => input = node\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = InputMain;\nexport default connect()(InputMain);\n\nvar _c;\n\n$RefreshReg$(_c, \"InputMain\");","map":{"version":3,"sources":["/home/dell304/Selieznov/todo React/react_typescript/src/componenst/InputMain/index.tsx"],"names":["React","connect","addTodo","InputMain","dispatch","input","e","preventDefault","value","trim","node"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,eAAxB;;AAMA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyB;AACzC,MAAIC,KAAJ;AACA,sBACE;AACE,IAAA,QAAQ,EAAGC,CAAD,IAAY;AACpBA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAI,CAACF,KAAK,CAACG,KAAN,CAAYC,IAAZ,EAAL,EAAyB;AACvB;AACD;;AACDL,MAAAA,QAAQ,CAACF,OAAO,CAACG,KAAK,CAACG,KAAP,CAAR,CAAR;AACAH,MAAAA,KAAK,CAACG,KAAN,GAAc,EAAd;AACD,KARH;AAAA,2BAUE;AACE,MAAA,WAAW,EAAC,oBADd;AAEE,MAAA,GAAG,EAAGE,IAAD,IAAWL,KAAK,GAAGK;AAF1B;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAnBD;;KAAMP,S;AAqBN,eAAeF,OAAO,GAAGE,SAAH,CAAtB","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addTodo } from \"../../actions\";\n\ninterface Props {\n  dispatch: any;\n}\n\nconst InputMain = ({ dispatch }: Props) => {\n  let input: any;\n  return (\n    <form\n      onSubmit={(e: any) => {\n        e.preventDefault();\n        if (!input.value.trim()) {\n          return;\n        }\n        dispatch(addTodo(input.value));\n        input.value = \"\";\n      }}\n    >\n      <input\n        placeholder=\"Add your task here\"\n        ref={(node) => (input = node)}\n      ></input>\n    </form>\n  );\n};\n\nexport default connect()(InputMain);\n"]},"metadata":{},"sourceType":"module"}