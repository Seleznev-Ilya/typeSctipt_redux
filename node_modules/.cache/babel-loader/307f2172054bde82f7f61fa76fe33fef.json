{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dell304/Selieznov/todo React/react_typescript/src/pages/main/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TodoForm from \"../../components/TodoForm\";\nimport { TodoList } from \"../../components/TodoList\";\nimport { TodoModal } from \"../../components/TodoModal\";\nimport { TodoInteraction } from \"../../components/TodoInteraction\";\nimport \"./style.scss\";\n\nconst MainPage = () => {\n  _s();\n\n  const [todo, setTodo] = useState([]);\n  const [modalState, setModalSate] = useState(false);\n  const [currentState, setCuttrentState] = useState(\"all\");\n\n  const AddHabdler = title => {\n    const task = {\n      title,\n      id: new Date().getTime(),\n      completed: false\n    };\n    setTodo(prev => {\n      return [...prev, task];\n    });\n  };\n\n  const CheckHandler = id => {\n    setTodo(prev => prev.map(todoItem => {\n      if (todoItem.id === id) {\n        todoItem.completed = !todoItem.completed;\n      }\n\n      return todoItem;\n    }));\n  };\n\n  const DeleteHandler = id => {\n    setTodo(prev => prev.filter(todoItem => todoItem.id !== id));\n  };\n\n  const EditHandler = (id, title) => {\n    setTodo(prev => prev.map(todoItem => {\n      if (todoItem.id === id) {\n        todoItem.title = title;\n      }\n\n      return todoItem;\n    }));\n\n    if (title.trim() === \"\") {\n      DeleteHandler(id);\n    }\n  };\n\n  const CleanCompletedHandler = () => {\n    setTodo(prev => prev.filter(todoItem => todoItem.completed === false));\n  };\n\n  const FilterStateHandler = title => {\n    setCuttrentState(title);\n  };\n\n  const storeFiltered = (todoArr, currentStateStr) => {\n    let arrStore;\n    currentStateStr === \"all\" ? arrStore = todoArr : arrStore = todoArr.filter(item => {\n      return item.completed === (currentStateStr === \"completed\");\n    });\n    return arrStore;\n  };\n\n  const SelectAllHandler = () => {\n    const isAnyCheckFalse = todo.find(itemTdod => itemTdod.completed === false);\n\n    if (isAnyCheckFalse) {\n      setTodo(prev => prev.map(todoItem => {\n        todoItem.completed = true;\n        return todoItem;\n      }));\n    } else {\n      setTodo(prev => prev.map(todoItem => {\n        todoItem.completed = false;\n        return todoItem;\n      }));\n    }\n  };\n\n  useEffect(() => {\n    setTodo(todo);\n  }, [todo]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n        onSubmit: AddHabdler,\n        onSelectBtn: SelectAllHandler,\n        todo: todo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todo: storeFiltered(todo, currentState),\n        onCheck: CheckHandler,\n        onDelete: DeleteHandler,\n        onEdidt: EditHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), todo.length !== 0 ? /*#__PURE__*/_jsxDEV(TodoInteraction, {\n        arrItems: todo,\n        clear: CleanCompletedHandler,\n        state: currentState,\n        setFilter: FilterStateHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), modalState ? /*#__PURE__*/_jsxDEV(TodoModal // className={\"modal\"}\n    // title={\"Do you want to delete?\"}\n    // description={}\n    // onClose={closeModalWindow}\n    // onConfirm={onButtonConfirm}\n    , {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(MainPage, \"VwcJcuyQo29NaeR7egwXlKzyC5Y=\");\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/home/dell304/Selieznov/todo React/react_typescript/src/pages/main/index.tsx"],"names":["React","useEffect","useState","TodoForm","TodoList","TodoModal","TodoInteraction","MainPage","todo","setTodo","modalState","setModalSate","currentState","setCuttrentState","AddHabdler","title","task","id","Date","getTime","completed","prev","CheckHandler","map","todoItem","DeleteHandler","filter","EditHandler","trim","CleanCompletedHandler","FilterStateHandler","storeFiltered","todoArr","currentStateStr","arrStore","item","SelectAllHandler","isAnyCheckFalse","find","itemTdod","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TodoForm from \"../../components/TodoForm\";\nimport { TodoList } from \"../../components/TodoList\";\nimport { TodoModal } from \"../../components/TodoModal\";\nimport { TodoInteraction } from \"../../components/TodoInteraction\";\nimport \"./style.scss\";\nimport { Task } from \"../../types/index\";\n\nconst MainPage = () => {\n  const [todo, setTodo] = useState<Task[]>([]);\n  const [modalState, setModalSate] = useState<boolean>(false);\n  const [currentState, setCuttrentState] = useState<string>(\"all\");\n\n  const AddHabdler = (title: string) => {\n    const task: Task = {\n      title,\n      id: new Date().getTime(),\n      completed: false,\n    };\n\n    setTodo((prev: Task[]) => {\n      return [...prev, task];\n    });\n  };\n\n  const CheckHandler = (id: number) => {\n    setTodo((prev) =>\n      prev.map((todoItem) => {\n        if (todoItem.id === id) {\n          todoItem.completed = !todoItem.completed;\n        }\n        return todoItem;\n      })\n    );\n  };\n\n  const DeleteHandler = (id: number) => {\n    setTodo((prev) => prev.filter((todoItem) => todoItem.id !== id));\n  };\n\n  const EditHandler = (id: number, title: string) => {\n    setTodo((prev) =>\n      prev.map((todoItem) => {\n        if (todoItem.id === id) {\n          todoItem.title = title;\n        }\n        return todoItem;\n      })\n    );\n    if (title.trim() === \"\") {\n      DeleteHandler(id);\n    }\n  };\n\n  const CleanCompletedHandler = () => {\n    setTodo((prev) => prev.filter((todoItem) => todoItem.completed === false));\n  };\n\n  const FilterStateHandler = (title: string) => {\n    setCuttrentState(title);\n  };\n\n  const storeFiltered = (todoArr: Task[], currentStateStr: string) => {\n    let arrStore;\n    currentStateStr === \"all\"\n      ? (arrStore = todoArr)\n      : (arrStore = todoArr.filter((item) => {\n          return item.completed === (currentStateStr === \"completed\");\n        }));\n\n    return arrStore;\n  };\n\n  const SelectAllHandler = () => {\n    const isAnyCheckFalse = todo.find(\n      (itemTdod) => itemTdod.completed === false\n    );\n    if (isAnyCheckFalse) {\n      setTodo((prev) =>\n        prev.map((todoItem) => {\n          todoItem.completed = true;\n\n          return todoItem;\n        })\n      );\n    } else {\n      setTodo((prev) =>\n        prev.map((todoItem) => {\n          todoItem.completed = false;\n\n          return todoItem;\n        })\n      );\n    }\n  };\n\n  useEffect(() => {\n    setTodo(todo);\n  }, [todo]);\n\n  return (\n    <>\n      <div className=\"container\">\n        <h1>Todo List</h1>\n        <TodoForm\n          onSubmit={AddHabdler}\n          onSelectBtn={SelectAllHandler}\n          todo={todo}\n        />\n        <TodoList\n          todo={storeFiltered(todo, currentState)}\n          onCheck={CheckHandler}\n          onDelete={DeleteHandler}\n          onEdidt={EditHandler}\n        />\n        {todo.length !== 0 ? (\n          <TodoInteraction\n            arrItems={todo}\n            clear={CleanCompletedHandler}\n            state={currentState}\n            setFilter={FilterStateHandler}\n          />\n        ) : null}\n      </div>\n      {modalState ? (\n        <TodoModal\n        // className={\"modal\"}\n        // title={\"Do you want to delete?\"}\n        // description={}\n        // onClose={closeModalWindow}\n        // onConfirm={onButtonConfirm}\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default MainPage;\n"]},"metadata":{},"sourceType":"module"}